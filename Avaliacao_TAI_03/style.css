body{
    

}
p{
    
}

/*Explicação dos recursos utilizados no CSS para desenvolvimento desta página*/

/*Vamos ressaltar logo no início do arquivo, para evitar cansativas repetições, que para edição das classes declaradas no HTMl, faz-se o seguinte método:

I) ponto(.) + nome da classe {......}. Exemplo:
.menu-navBar{...}

*/

/* Inicialmente, estamos estilizando o body(corpo/parte visível ao usuário) utilizando: *{...}

Os elementos estilizados são:
a) margin: 0; --> utilizada para definir o espaço ao redor dos elementos, criando fora de quaisquer bordas designadas. Neste caso, para evitar interfêrencia em outras estilizações de classes seguintes, opta-se por zerá-la.
b) padding: 0; --> essa propriedade é utilizada para gerar espaço ao redor do conteúdo de um elemento, dentro de qualquer borda definida. Basicamente, trata-se de um preenchimento.
c)  box-sizing: inherit; -->  utilizada para alterar a propriedade padrão da box model. Incluindo um preenchimento(padding) e a borda na largura e altura total de um elemento.
d)  font-family: "Inconsolata", sans-serif; --> nesta propriedade se define o estilo da fonte, através da adição de "famílias" de fontes específicas.
e)  font-size: 15px; --> nesta propriedade se define o tamanho da fonte.
f)  line-height: 1.8; --> propriedade que especifica a altura de uma linha.
g) color: #777; --> cor da escrita.
*/

* {
    margin: 0;
    padding: 0;
    box-sizing: inherit;
    font-family: "Inconsolata", sans-serif;
    font-size: 15px;
    color: #777;
    line-height: 1.8;
  }
  
  /* Estilização da Barra de navegação */
  
  /* Classe: .menu-navBar
  
  a) padding: 8px 0; --> preenchimento da classe. É importante ressaltar que px é uma "unidade de medida".
  b) position: fixed; -->  ele sempre permanece no mesmo lugar, mesmo que a página seja rolada. Ou seja, seu posicionamento é fixo.
  c)  width: 100%; --> está estilizando a largura, ocupando 100% do espaço possível.
  d)  z-index: 1; --> propriedade especifica a ordem de um elemento. Um elemento com maior ordem de importância está sempre na frente de um elemento com menor ordem de importância.
  e)  top:0; --> propriedade se refere a posição vertical de um elemento posicionado.
  f)  display: block; --> essa propriedade especifica o comportamento de exibição, basicamente aqui nessa classe, a exibição está bloqueada/fixa
  */
  
  .menu-navBar{
    padding: 8px 0;
    position: fixed;
    width: 100%;
    z-index: 1;
    top:0;
    display: block;  
  }
  
  /* Classe: .menu
  
  a) display: block; --> essa propriedade especifica o comportamento de exibição, basicamente aqui nessa classe, a exibição está bloqueada/fixa.
  b)  width: 100%; --> está estilizando a largura, ocupando 100% do espaço possível.
  c)  box-sizing: inherit; --> tilizada para alterar a propriedade padrão da box model. Incluindo um preenchimento(padding) e a borda na largura e altura total de um elemento.
  d) overflow: hidden; --> Esconde o conteúdo excedente.
  */
  
  .menu{
  display: block;
  overflow: hidden;
  width: 100%;
  box-sizing: inherit;
  }
  
  
  /* Classe: a, :visited:active --> isto é, quando após o link da barra de navegação foi clicado.
  a) text-decoration: none; --> não há linha embaixo do conteúdo do link.
  b) color:black; --> cor da escrita corresponde ao preto.
  */
  
  a, :visited:active{
    text-decoration: none;
    color:black;
  }
  
  /* Classe: .home, .about, .contact, .portfolio (as classes clicáveis da barra de navegação, como )
  
  a) padding: 8px 16px; --> preenchimento da classe perante o espaço que pode utilizar. A unidade de medida é px.
  b) float: left; -->especifica a localização do elemento no container, neste caso, ficará à esquerda(left)
  c) width: auto; --> largura está no automático.
  d) border: none; --> sem bordas.
  e)display: block; --> essa propriedade especifica o comportamento de exibição, basicamente aqui nessa classe, a exibição está bloqueada/fixa.
  f) outline: 0; --> corresponde ao contorno da borda, nesse caso não há, pois está zerada.
  g) white-space: normal; --> basicamente, se trata de como um elemento se comporta dentro de um espaço em branco.
  */
  
  .home, .about, .contact, .portfolio{
      padding: 8px 16px;
      float: left;
      width: auto;
      border: none;
      display: block;
      outline: 0;
      white-space: normal;
     
  }
  
  /* Classe: .pesquisar
  
  a) padding: 8px 16px; --> preenchimento da classe perante o espaço que pode utilizar. A unidade de medida é px.
  b) float: right; --> especifica a localização do elemento no container, neste caso, ficará à direita(right).
  c) width: auto; --> largura está no automático.
  d) border: none; --> sem bordas.
  e)display: block; --> essa propriedade especifica o comportamento de exibição, basicamente aqui nessa classe, a exibição está bloqueada/fixa.
  f) outline: 0; --> corresponde ao contorno da borda, nesse caso não há, pois está zerada.
  
  */
  
  .pesquisar{
  padding: 8px 16px;
  float: right;
  width: auto;
  border: none;
  display: block;
  outline: 0;
  }
  
  /* Classe: .home:hover, .about:hover,.contact:hover, .portfolio:hover
  
  OBS: hover é utilizado para selecionar elementos quando você passa o mouse sobre eles.
  
  a) background-color: #c2bdbd; --> cor do fundo. Nesse caso, está branco.
  color: black; --> cor da escrita. Nesse caso, está preto.
  text-decoration: none; --> sem linha abaixo do link.
  */
  
  .home:hover, .about:hover,.contact:hover, .portfolio:hover {
    background-color: #c2bdbd;
    color: black;
    text-decoration: none;
  }
  
  
  /* Classe: .iconeAbout, .iconeContact, .iconePorfolio, .iconePesquisar
  
  a) display: inline-block; --> permite definir uma largura e uma altura no elemento.basicamente, está exibindo os itens de lista horizontalmente em vez de verticalmente.
  b) font: normal normal normal 14px/1 FontAwesome; --> estilo da fonte.
  c) font-size: inherit; --> tamanho da fonte.
  d) text-rendering: auto; --> propriedade que otimiza o texto, nesse caso, está automática.
  e)box-sizing: inherit; --> utilizada para alterar a propriedade padrão da box model. Incluindo um preenchimento(padding) e a borda na largura e altura total de um elemento.
  */
  
  .iconeAbout, .iconeContact, .iconePorfolio, .iconePesquisar{
    display: inline-block;
    font: normal normal normal 14px/1 FontAwesome;
    font-size: inherit;
    text-rendering: auto;
    box-sizing: inherit;
  }
  
  /* Nessas estilizações abaixo, estamos inserindo os ícones das classes da barra de navegação, através do seu código. Importante também ressaltar que o before está sendo colocado ali pelo fator do ícone estar inserido ANTES(before em inglês) do texto*/
  
  .iconeAbout:before {
    content: "\f007"; 
  }
  
  .iconeContact:before {
    content: "\f0e0";
  }
  
  .iconePorfolio:before{
    content: "\f00a";
  }
  
  .iconePesquisar:before{
    content: "\f002";
  }
  
  /* Classe: .fundo-container
  
  a) background-image: url(/images/img1.jpg); --> está definindo a imagem de fundo, no caso utilizando a URL da image.
  b) background-position: center; --> está definindo o posicionamento da imagem de fundo.
  c) background-repeat: no-repeat; --> está definindo que a imagem de fundo não irá se repetir.
  d) background-size: cover; --> ajusta a imagem o mais largamente possível e mantém sua proporção (a imagem não fica esticada).
  e)opacity: 0.80; --> opacidade da imagem.
  f)position: relative; --> posicionamento na página.
  g)background-attachment: scroll; --> essa propriedade define se uma imagem de plano de fundo rola com o restante da página ou é fixa. No caso, scroll é rolar.
  h)min-height: 600px;--> está definindo a altura mínima.
  */
  
  /*Imagem de Fundo 01 */ 
  .fundo-container {
    background-image: url(./img/img1.jpg);
    background-position: center;
    background-repeat: no-repeat;
    background-size: cover;
    opacity: 0.80;
    position: relative;
    background-attachment: scroll;
    min-height: 600px;
    
  }
  
  /* Classe: .fundo 
  
  a) position: absolute; --> posicionamento na página.
  b) top: 50%; --> está definindo o posicionamento de maneira vertical.
  c) left: 50%; --> está definindo o posicionamento perante à esquerda.
  d) transform: translate(-50%,-50%); --> é necessário para que o centro do elemento se alinhe com o centro da classe maior.
  */
  
  .fundo {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%,-50%);
  }
  
  /* Classe: .titulo
  
  a) color: #fff; --> está definindo a cor da escrita.
  b) background-color: #000; -->está definindo a cor do fundo.
  c) letter-spacing: 5px; --> está definindo ao espaçamento entre as letras.
  d) padding: 14px 30px; --> está definindo o preenchimento da classe perante o espaço que possui.
  e)text-align: center;--> está definindo o alinhamento do texto, neste caso, ao centro.
  f) font-size: 34px; --> está definindo o tamanho da fonte.
  g) animation: opac 0.9s; --> está definindo a animação com o tempo da opacidade.
  */
  
  .titulo{
    color: #fff;
    background-color: #000;
    letter-spacing: 5px;
    padding: 14px 30px;
    text-align: center;
    font-size: 34px;
    animation: opac 0.9s;
  }
  
  /* Classe: .tituloWebsite
  
  a) color: #fff; --> está definindo a cor da escrita.
  b) background-color: #000; -->está definindo a cor do fundo.
  c)  padding: 14px 24px; --> está definindo o preenchimento da classe perante o espaço que possui.
  e)text-align: center;--> está definindo o alinhamento do texto, neste caso, ao centro.
  f) font-size: 34px; --> está definindo o tamanho da fonte.
  g) animation: opac 0.8s; --> está definindo a animação com o tempo da opacidade.
  */
  
  .tituloWebsite{
    
    color: #fff;
    background-color: #000;
    padding: 12px 24px;
    text-align: center;
    font-size: 34px;
    animation: opac 0.8s;
  }
  
  /* Classe: .about-container
  
  a) max-width: 880px; --> está definindo a largura máxima;
  b) padding-top: 64px; -->está definindo o preenchimento vertical.
  c) padding: 0.01em 16px; --> está definindo o preenchimento da classe perante o espaço que possui.
  e)margin-left: auto;--> está definindo a margem à esquerda, nesse caso, está automática.
  f)margin-right: auto; --> está definindo a margem à direita, nesse caso, está automática.
  g)padding-bottom: 64px; --> define o preenchimento inferior (espaço) de um elemento.
  */
  
  /*Container About*/
  .about-container{
    padding: 0.01em 16px;
    max-width: 880px;
    padding-top: 64px;
    padding-bottom: 64px;
    margin-left: auto;
    margin-right: auto;
  }
  
  /* Classe: .titulo-about
  
  a)  text-align: center; --> está definindo o alinhamento do texto de maniera centralizada.
  b) font-weight: 400; --> especifica a intensidade da fonte.
  c) margin: 10px 0; --> está definindo a margem do container.
  e)font-size: 24px;--> está definindo o tamanho da fonte.
  f)display: block; --> essa propriedade especifica o comportamento de exibição, basicamente aqui nessa classe, a exibição está bloqueada/fixa.
  g)margin-block-start: 1em; --> define a margem inicial do bloco/classe.
  h)margin-block-end: 1em; --> define a margem final do bloco/classe.
  i)margin-inline-start: 0px;--> define a margem inicial do bloco/classe pela direita.
  j)margin-inline-end: 0px; --> define a margem inicial do bloco/classe pela esquerda.
  k)font-family: "Lato", sans-serif;--> família utilizada para as fontes. Ou seja, o estilo da fonte.
  */
  
  .titulo-about{
    text-align: center;
    font-weight: 400;
    margin: 10px 0;
    font-size: 24px;
    display: block;
    margin-block-start: 1em;
    margin-block-end: 1em;
    margin-inline-start: 0px;
    margin-inline-end: 0px;
    font-family: "Lato", sans-serif;
  }
  
  /* Classe: .textCentro
  
  a)  text-align: center; --> está definindo o alinhamento do texto de maniera centralizada.
  b) display: block; --> essa propriedade especifica o comportamento de exibição, basicamente aqui nessa classe, a exibição está bloqueada/fixa.
  c)margin-block-start: 1em; --> define a margem inicial do bloco/classe.
  d)margin-block-end: 1em; --> define a margem final do bloco/classe.
  e)margin-inline-start: 0px;--> define a margem inicial do bloco/classe pela direita.
  f)margin-inline-end: 0px; --> define a margem inicial do bloco/classe pela esquerda.
  */
  
  .textCentro{
    display: block;
    margin-block-start: 1em;
    margin-block-end: 1em;
    margin-inline-start: 0px;
    margin-inline-end: 0px;
    text-align: center;
  }
  
  /* Classe: p (não é uma classe, por isso não contém o ponto).
  
  a) display: block; --> essa propriedade especifica o comportamento de exibição, basicamente aqui nessa classe, a exibição está bloqueada/fixa.
  b)margin-block-start: 1em; --> define a margem inicial do bloco/classe.
  c)margin-block-end: 1em; --> define a margem final do bloco/classe.
  d)margin-inline-start: 0px;--> define a margem inicial do bloco/classe pela direita.
  e)margin-inline-end: 0px; --> define a margem inicial do bloco/classe pela esquerda.
  */
  
  p{
  display: block;
  margin-block-start: 1em;
  margin-block-end: 1em;
  margin-inline-start: 0px;
  margin-inline-end: 0px;
  }
  
  /* Classe: .perfil:before
  
  a) content:""; --> conteúdo inserido, neste caso, nenhum conteúdo.
  b)display:table; --> essa propriedade especifica o comportamento de exibição, basicamente aqui nessa classe, a exibição está em formato de tabela.
  c)clear:both --> especifica se há possibilidade de conter um elemento flutuante perto/ao seu lado ou abaixo dele.
  */
  .perfil:before{
    content:"";
    display:table;
    clear:both
  }
  
  /* Classe: .imgperfil
  
  a) width: 50%; --> está definindo a largura da classe, nesse caso, emtade do escopo disponível.
  b) padding: 12px 24px; --> está definindo o preenchimento da classe.
  c) text-align: center; --> está definindo o alinhamento do texto, nesse caso, está centralizado.
  d) float: left; --> especifica a localização do elemento no container, neste caso, ficará à esquerda(left).
  */
  
  .imgperfil{
    width: 50%;
    padding: 12px 24px;
    text-align: center;
    float: left;
  }
  
  /* Classe: b (não é uma classe, por isso não conta com o ponto(.) no início)
  
  a) font-weight: bolder --> deixa a fonte com mais "negrito" que o peso da fonte herdada por outra classe.
  */
  
  b{
    font-weight: bolder
  }
  
  /* Nessa estilização abaixo, estamos inserindo o ícone do texto My Name, através do seu código. Importante também ressaltar que o before está sendo colocado ali pelo fator do ícone estar inserido ANTES(before em inglês) do texto*/
  
  .iconePerfil:before{
        content: "\f007";
  }
  
  
  /* Classe: .iconePerfil
  
  a) display: inline-block; --> permite definir uma largura e uma altura no elemento.basicamente, está exibindo os itens de lista horizontalmente em vez de verticalmente.
  b) font: normal normal normal 14px/1 FontAwesome; --> estilo da fonte.
  c) font-size: inherit; --> tamanho da fonte.
  d) text-rendering: auto; --> propriedade que otimiza o texto, nesse caso, está automática.
  */
  
  .iconePerfil{
    display: inline-block;
    font: normal normal normal 14px/1 FontAwesome;
    font-size: inherit;
    text-rendering: auto;
  }
  
  /* Classe: .imagemDoPerfil
  
  a) opacity: 0.55; --> está definindo a opacidade da imagem.
  b) border-radius: 4px; --> está definindo o arredondamento da imagem.
  c) max-width: 100%; --> está definindo a largura da imagem perante o espaço que pode utilizar.
  d) height: auto; --> está definindo a altura como automática.
  e)border-style: none; --> não está atribuindo nenhum estilo à borda.
  */
  
  .imagemDoPerfil{
      opacity: 0.55;
      border-radius: 4px;
      max-width: 100%;
      height: auto;
      border-style: none;
  }
  
  /* Classe: .tituloPorcentagem
  
  a)  text-align: center; --> está definindo o alinhamento do texto de maniera centralizada.
  b)font-size: 18px;--> está definindo o tamanho da fonte.
  c)display: block; --> essa propriedade especifica o comportamento de exibição, basicamente aqui nessa classe, a exibição está bloqueada/fixa.
  d)margin-block-start: 1em; --> define a margem inicial do bloco/classe.
  h)margin-block-end: 1em; --> define a margem final do bloco/classe.
  e)margin-inline-start: 0px;--> define a margem inicial do bloco/classe pela direita.
  f)margin-inline-end: 0px; --> define a margem inicial do bloco/classe pela esquerda.
  g) padding-top: 16px; -->está definindo o preenchimento vertical.
  h)padding-bottom: 16px; --> define o preenchimento inferior (espaço) de um elemento.
  */
  
  
  .tituloPorcentagem{
    padding-top: 3%;
    padding-bottom: 16px;
    text-align: center;
    font-size: 28px;
    display: block;
    margin-block-start: 1em;
    margin-block-end: 1em;
    margin-inline-start: 0px;
    margin-inline-end: 0px;
  }
  
  /* Classe: .photography, .webDesign, .photoshop
  
  a) letter-spacing: 10px; --> está definindo o espaçamento entre as letras.
  */
  
  .photography, .webDesign, .photoshop{
    letter-spacing: 10px;
  }
  
  /* Nessas estilizações abaixo, estamos inserindo os ícones de cada qualidade da desenolvedora em questão, através do seu código. Importante também ressaltar que o before está sendo colocado ali pelo fator do ícone estar inserido ANTES(before em inglês) do texto*/
  
  .iconeCamera:before{
        content: "\f030";
  }
  
  .iconeComputador:before{
      content: "\f109";
  }
  
  .iconePintura:before{
    content: "\f03e";
  }
  
  /* Classe: .iconeCamera, .iconeComputador, .iconePintura
  
  a) display: inline-block; --> permite definir uma largura e uma altura no elemento.basicamente, está exibindo os itens de lista horizontalmente em vez de verticalmente.
  b) font: normal normal normal 14px/1 FontAwesome; --> estilo da fonte.
  c) font-size: inherit; --> tamanho da fonte.
  d) text-rendering: auto; --> propriedade que otimiza o texto, nesse caso, está automática.
  */
  
  .iconeCamera, .iconeComputador, .iconePintura{
    display: inline-block;
    font: normal normal normal 14px/1 FontAwesome;
    font-size: inherit;
    text-rendering: auto;
  }
  
  /* Classe: .barraPorcentagem1, .barraPorcentagem2, .barraPorcentagem3
  
  a)color: #000; --> está definindo a cor da escrita.
  b)background-color: #f1f1f1; --> está definindo a cor do fundo.
  */
  
  .barraPorcentagem1, .barraPorcentagem2, .barraPorcentagem3 {
    color: #000;
    background-color: #f1f1f1;
  }
  
  /* Classe: .preenchimento1
  
  a) content:""; --> conteúdo inserido, neste caso, nenhum conteúdo.
  b)display:table; --> essa propriedade especifica o comportamento de exibição, basicamente aqui nessa classe, a exibição está em formato de tabela.
  c)clear:both --> especifica se há possibilidade de conter um elemento flutuante perto/ao seu lado ou abaixo dele.
  d)color: #fff; --> está definindo a cor da escrita/fonte.
  e)background-color: #616161; --> está definindo a cor do fundo.
  f)width:90%; --> está definindo a largura dentro do escopo em que a classe está inserida.
  g)padding: 4px 8px; --> está definindo o preenchimento da class no espaço em que ocupa.
  */
  
  .preenchimento1 {
    content: "";
    display: table;
    clear: both;
    padding: 4px 8px;
    color: #fff;
    background-color: #616161;
    width:90%;
  }
  
  /* Classe: .preenchimento2
  
  a) content:""; --> conteúdo inserido, neste caso, nenhum conteúdo.
  b)display:table; --> essa propriedade especifica o comportamento de exibição, basicamente aqui nessa classe, a exibição está em formato de tabela.
  c)clear:both --> especifica se há possibilidade de conter um elemento flutuante perto/ao seu lado ou abaixo dele.
  d)color: #fff; --> está definindo a cor da escrita/fonte.
  e)background-color: #616161; --> está definindo a cor do fundo.
  f)width: 85%; --> está definindo a largura dentro do escopo em que a classe está inserida.
  g)padding: 4px 8px; --> está definindo o preenchimento da class no espaço em que ocupa.
  */
  
  .preenchimento2 {
    content: "";
    display: table;
    clear: both;
    padding: 4px 8px;
    color: #fff;
    background-color: #616161;
    width:85%
  }
  
  /* Classe: .preenchimento3
  
  a) content:""; --> conteúdo inserido, neste caso, nenhum conteúdo.
  b)display:table; --> essa propriedade especifica o comportamento de exibição, basicamente aqui nessa classe, a exibição está em formato de tabela.
  c)clear:both --> especifica se há possibilidade de conter um elemento flutuante perto/ao seu lado ou abaixo dele.
  d)color: #fff; --> está definindo a cor da escrita/fonte.
  e)background-color: #616161; --> está definindo a cor do fundo.
  f)width:75%; --> está definindo a largura dentro do escopo em que a classe está inserida.
  g)padding: 4px 8px; --> está definindo o preenchimento da class no espaço em que ocupa.
  */
  
  .preenchimento3 {
    content: "";
    display: table;
    clear: both;
    padding: 4px 8px;
    color: #fff;
    background-color: #616161;
    width:75%
  }
  
  /* Classe: .informacoes
  
  a) content:""; --> conteúdo inserido, neste caso, nenhum conteúdo.
  b)clear:both --> especifica se há possibilidade de conter um elemento flutuante perto/ao seu lado ou abaixo dele.
  d)color: #fff; --> está definindo a cor da escrita/fonte.
  e)background-color: #616161; --> está definindo a cor do fundo.
  f)height: 110px; --> está definindo a altura da classe.
  */
  
  .informacoes{
    color: #fff;
    background-color: #616161;
    content: "";
    clear: both;        
    height: 110px;
  }
  
  /* Classe: .partnerts, .projects, .clients, .meetings
  
  a) float: left; --> especifica a localização do elemento no container, neste caso, ficará à esquerda(left).
  b) width: 15%; --> está definindo a porcentagem da largura da classe.
  c) margin: 20px 3% 20px 7%; --> está definindo o tamanho da margem e o percentual que ocupa.
  d) color:white; --> está definindo a cor da fonte.
  */
  
  .partnerts, .projects, .clients, .meetings{
    float: left;
    width: 15%;
    margin: 22px 3% 20px 7%;
    color:white;
  }
  
  /* Classe: .numPartnerts, .numProjects, .numMeetings, .numClients
  
  a) font-size: 24px; --> está definindo o tamanho da fonte.
  b)line-height: 1.8; --> está especificando a altura da linha.
  color:white; --> está definindo a cor da fonte.
  */
  
  .numPartnerts, .numProjects, .numMeetings, .numClients{
    font-size: 24px;
    line-height: 1.8;
    color:white;
  }
  
  /* Classe: .imgPortfolio
  
  a) background-image: url(/images/img2.jpg); --> está definindo a imagem de fundo, no caso utilizando a URL da imagem.
  b) background-position: center; --> está definindo o posicionamento da imagem de fundo.
  c) background-repeat: no-repeat; --> está definindo que a imagem de fundo não irá se repetir.
  d) background-size: cover; --> ajusta a imagem o mais largamente possível e mantém sua proporção (a imagem não fica esticada).
  e)opacity: 0.75; --> opacidade da imagem.
  f)background-attachment: scroll; --> essa propriedade define se uma imagem de plano de fundo rola com o restante da página ou é fixa. No caso, scroll é rolar.
  g)min-height: 400px;--> está definindo a altura mínima.
  */
  
  /* PORTFOLIO */ 
    .imgPortfolio{
      background-image: url(./img/portifolio.jpg);
      background-position: center;
      background-repeat: no-repeat;
      background-size: cover;
      opacity: 0.75;
      background-attachment: scroll;
      min-height: 400px;
      
    }
  
  /* Classe: .tituloPortfolio 
  
  a) position: absolute; --> posicionamento na página.
  b) top: 240%; --> está definindo o posicionamento de maneira vertical.
  c) left: 50%; --> está definindo o posicionamento perante à esquerda.
  d) transform: translate(-50%,-50%); --> é necessário para que o centro do elemento se alinhe com o centro da classe maior.
  */
  
  /* Titulo Portfolio*/
  .tituloPortfolio{
  padding: 170px 0 0;
  text-align:center;
  }
  
  /* Classe: .port
  
  a) letter-spacing: 10px; --> está definindo o espaçamento entre as letras.
  b) color: #fff; --> está definindo a cor da fonte.
  c) font-size: 36px; --> está definindo o tamanho da fonte.
  d) top: 30%; --> está definindo o posicionamento vertical.
  e) left: 43%; --> está definindo o posicionamento relacionado à esquerda.
  */
  
  .port{
    letter-spacing: 10px;
    color: #fff;
    font-size: 36px; 
    
  }
  
  /* Classe: .myWork
  
  a) background-color: white; --> está definindo a cor do fundo da classe.
  b) height: 900px; --> está definindo a altura da classe.
  c)padding-top: 64px; -->está definindo o preenchimento vertical.
  d)padding-bottom: 64px; --> define o preenchimento inferior (espaço) de um elemento.
  e)padding: 0.01em 16px; --> está definindo o preenchimento da classe, ou seja, o espaço que a classe utiliza perante ao escopo total.
  f)max-width: 1300px; --> está definindo a máxima largura.
  g) margin-left: auto; --> está definindo a margem à esquerda como automática.
  h) margin-right: auto;--> está definindo a margem à direita como automática.
  
  */
  
  
  /*Container MY WORK*/
  .myWork{
    background-color: white;
    height: 750px;
    padding-top: 64px;
    padding-bottom: 64px;
    padding: 0.01em 16px;
    max-width: 980px;
    margin-left: auto;
    margin-right: auto;
  }
  
  /* Classe: .tituloMyWork
  
  a)text-align: center; --> está definindo o alinhamento do texto, neste caso, está centralizado.
  b)font-weight: 400; -->e specifica a intensidade da fonte.
  c)margin: 10px 0; --> está determinando a margem com as medidas em px(unidade de medida).
  d)font-size: 24px; --> está definindo o tamanho da fonte.
  e)margin-block-start: 1em; --> define a margem inicial do bloco/classe.
  f)margin-block-end: 1em; --> define a margem final do bloco/classe.
  g)margin-inline-start: 0px;--> define a margem inicial do bloco/classe pela direita.
  h)margin-inline-end: 0px; --> define a margem inicial do bloco/classe pela esquerda.
  i)display: block; --> essa propriedade especifica o comportamento de exibição, basicamente aqui nessa classe, a exibição está bloqueada/fixa.
  */
  
  .tituloMyWork{
    text-align: center;
    font-weight: 400;
    margin: 10px 0;
    font-size: 24px;
    margin-block-start: 1em;
    margin-block-end: 1em;
    margin-inline-start: 0px;
    margin-inline-end: 0px;
    display: block;
  }
  
  /* Classe: .tituloMyWork
  
  a))margin-block-start: 1em; --> define a margem inicial do bloco/classe.
  b)margin-block-end: 1em; --> define a margem final do bloco/classe.
  c)margin-inline-start: 0px;--> define a margem inicial do bloco/classe pela direita.
  d)margin-inline-end: 0px; --> define a margem inicial do bloco/classe pela esquerda.
  e)display: block; --> essa propriedade especifica o comportamento de exibição, basicamente aqui nessa classe, a exibição está bloqueada/fixa.
  
  */
  
  .subtituloMyWork{
    display: block;
    margin-block-start: 1em;
    margin-block-end: 1em;
    margin-inline-start: 0px;
    margin-inline-end: 0px;
    text-align: center
  }
  
  /* Classe: ..grupoimagens, .grupoimagens2
  
  a)display: flex; --> está definindo a disposição do elemento, neste caso, está "flex", ou seja, flexível.
  b)flex-wrap: wrap; --> define se os itens  flexíveis são forçados a firarem em uma mesma linha, ou, podem ser quebrados em várias linhas. Wrap, no caso, serão quebrados em várias linhas.
  c)background-color: white; --> está definindo a cor do fundo.
  d)max-width:1000px; --> está definindo a largura máxima.
  e)margin: 0 auto; --> está definindo a margem, para todos os lados.
  f)flex-direction: row; --> está definido a direção dos itens no cotainer, neste caso, em linha(row).
  
  */
  
  .grupoimagens, .grupoimagens2  {
  
    display: flex;
    flex-wrap: wrap;
    background-color: white;
    max-width:1000px;
    margin: 0 auto;
    flex-direction: row;
  }
  
  /* Classe: .grupoimagens > div, .grupoimagens2 > div
  
  a)flex: 1 1 100px; --> está definindo o espaço utilizado no container flex.
  b)margin: 10px;--> está definindo a margem para todos os lados do elemento.
  */
  
  .grupoimagens > div, .grupoimagens2 > div{
    flex: 1 1 270px;
    margin: 10px;
  }
  
  /* Classe: .imagens-item
  
  a)overflow: hidden; --> está definindo que o conteúdo excedente está oculto.
  b)margin: 3px;--> está definindo a margem para todos os lados do elemento.
  c) border: 1px solid #fff;--> está definindo a espessura, o formato e a cor da borda do elemento.
  */
  
  .imagens-item {
    overflow: hidden;
    margin: 3px;
    border: 1px solid #fff;
  }
  
  /* Classe: .small_img
  
  a)width: 100%; --> está definindo a largura do elemento, nesse caso, ocupando 100% do espaço disponível.
  b)height: 100%;-> está definindo a altura do elemento, nesse caso, ocupando 100% do espaço disponível.
  c)cursor:pointer;--> é o elemento que será exibido/selecionado ao momento que o cursor apontar ou descansar.
  d)transition: all linear 0.5s; -> permite definir a transição entre dois estados de um elemento, ou seja, é usado para realizar efeitos/animações com um tempo de 0.5s.
  e):hover- é uma pseudoclasse  do transition.
  f)filter: grayscale(90%); -> é o filtro que será aplicado na imagem selecionada durante a transição.
  g)transform:scale(1.5);-> é uma propriedade que irá aumentar a escala da imagem selecionada para 1.5, ao momento que a transição começar.
  */
  
  .small_img{
    cursor: pointer;
    transition: all linear 0.5s;
    width: 100%;
    height: 100%;
  }
  .small_img:hover{
    filter: grayscale(60%);
    transform: scale(1.5);
  }
  /* Classe: .botaoLOAD
  
  a)margin-top: 64px; --> está definindo a margem acima do elemento.
  b) color: #000; --> está definindo a cor da fonte.
  c) background-color: transparent; --> está definindo a cor do fundo.
  d) padding: 12px 30px; --> está definindo o preenchimento do elemento dentro da classe.
  e) border: none; --> está definindo que não há borda.
  f) display: flex; --> está definindo a disposição do elemento, neste caso, está "flex", ou seja, flexível.
  g) justify-content: center; --> está definindo para descrever o alinhamento do contêiner de caixa flexível. 
  h) text-align: center; --> está definindo o alinhamento do texto, nesse caso, está centralizado.
  */
  
  .botaoLOAD{
    margin-top: 64px;
    color: #000;
    background-color: transparent;
    padding: 12px 30px;
    border: none;
    display: flex;
    justify-content: center;
    text-align: center;
  
  }
  
  /*|||||||||||||||||||||||||||||||||||||*/
  
  /* Classe:  .imgContact
  
  a) background-image: url(/images/img2.jpg); --> está definindo a imagem de fundo, no caso utilizando a URL da imagem.
  b) background-position: center; --> está definindo o posicionamento da imagem de fundo.
  c) background-repeat: no-repeat; --> está definindo que a imagem de fundo não irá se repetir.
  d) background-size: cover; --> ajusta a imagem o mais largamente possível e mantém sua proporção (a imagem não fica esticada).
  e)opacity: 0.75; --> está definindo a opacidade da imagem.
  f) background-attachment: scroll; --> essa propriedade define se uma imagem de plano de fundo rola com o restante da página ou é fixa. No caso, scroll é rolar.
  g) min-height: 400px; --> está definindo a altura mínima do elemento.
  h) max-width: 1600px; --> está definindo a largura máxima do elemento.
  i)position: relative; --> está definindo a posição do elemento relativamente posicionado, ou seja, posicionado em relação à sua posição normal.
  */
  
  
  /*Imagem do Contato*/
    .imgContact{
      background-image: url(./img/img3.jpg);
      background-position: center;
      background-repeat: no-repeat;
      background-size: cover;
      background-attachment: scroll;
      min-height: 600px;
      position: relative;
    }
  
  /* Classe: .partContact
  
  a) padding: 170px 0 0; --> está definindo o preenchimento do elemento na classe.
  b) text-align:center; --> está definindo o alinhamento do texto, no caso, centralizado.
  */
  
  .partContact{  
  padding: 270px 0 0;
  text-align:center;
  }
  
  /* Classe: .tituloContact
  
  a) letter-spacing: 10px; --> está definindo o espaçamento entre as letras.
  b) color: #fff; --> está definindo a cor da fonte.
  c) font-size: 36px; --> está definindo o tamanho da fonte.
  */
  
  .tituloContact{
    letter-spacing: 10px;
    color: rgb(175, 165, 124);
    font-size: 46px; 
  }
  
  /* Classe: .where-container
  
  a) overflow: hidden; --> está definindo que o conteúdo presente na caixa vai ser recortado e o restante do conteúdo ficará invisível caso ultrapasse o tamanho definido.
  b) background-color: white; --> está definindo a cor do fundo.
  */
  
  .where-container {
    overflow: hidden;
    background-color: white;
  }
  /* Classe: .where-page
  
  a)width: 1000px; --> está definindo a largura do elemento, nesse caso, ocupando 1000px do espaço disponível.
  b)height: 500px;-> está definindo a altura do elemento, nesse caso, ocupando 500px do espaço disponível.
  c) margin: 0 auto; --> está definindo a margem, onde que a margem vertical será 0 e a horizontal será automática.
  */
  .where-page {
    height: 500px;
    width: 1000px;
    margin: 0 auto;
  }
  /* Classe: .titulo1
  
  a)height: 100px;-> está definindo a altura do elemento, nesse caso, ocupando 100px do espaço disponível. 
  b)background-color: white; --> está definindo a cor do fundo. 
  */
  .titulo1 {
    height: 100px;
    background-color: white;    
  }
  /* Classe: .tituloWhere
  
  a) text-align:center; --> está definindo o alinhamento do texto, no caso, centralizado.
  b)font-weight: 400; --> especifica a intensidade da fonte.
  c) margin-top: 70px; --> está definindo a margem acima do elemento.
  d) margin-bottom: 10px; --> está definindo a margem abaixo do elemento.
  e) font-size: 24px; --> está definindo o tamanho da fonte.
  f) font-family: "Lato", sans-serif; --> especifica a fonte de um elemento.
  */
  .tituloWhere{
    text-align: center;
    font-weight: 400;
    margin-top:70px;
    margin-bottom: 10px;
    font-size: 24px;
    font-family: "Lato", sans-serif;
  }
  /* Classe: .subtitulo1
  
  a) display: block; -> essa propriedade especifica o comportamento de exibição, basicamente aqui nessa classe, a exibição está bloqueada/fixa.
  b)margin-block-start: 1em; --> define a margem inicial do bloco.
  c) margin-block-end: 1em; --> define a margem final do bloco.
  d) margin-inline-start: 0px; --> define a quantidade de espaço ao longo da borda inicial externa de um elemento na direção inline(modo de escrita, direcionalidade e orientação do texto do elemento).
  e) margin-inline-end: 0px; --> define a quantidade de espaço ao longo da borda final externa de um elemento na direção inline(modo de escrita, direcionalidade e orientação do texto do elemento).
  f)  text-align: center --> está definindo o alinhamento do texto, no caso, centralizado.
  */
  .subtitulo1{
      display: block;
      margin-block-start: 1em;
      margin-block-end: 1em;
      margin-inline-start: 0px;
      margin-inline-end: 0px;
      text-align: center
  }
  /* Classe: .imageMap
  
  a) padding: 1em 3px 30px 20%; -> define uma a distância entre o conteúdo de um elemento e suas bordas, podendo ser usado até 4 valores, na sequência: superior,direita,inferior e esquerda.
  b)float: left; --> nos permite controlar a posição horizontal de um elemento, que no caso estará alinhado a esquerda.
  c) width: 80%; --> está definindo a largura do elemento, nesse caso, ocupando 80% do espaço disponível.
  d) height: auto; --> está definindo a altura do elemento, nesse caso, será automático para o espaço disponível.
  e)  vertical-align: middle; 0px; --> define o alinhamento vertical de um elemento, que com a propriedade middle será colocado no meio do elemento pai.
  f)  border-style: none; --> define o estilo das quatro bordas de um elemento, só que nessa ocasião nenhum valor foi passado.
  g) border-radius: 4px; -->permite definir bordas arredondadas para um elemento.
  */
  .imageMap{
    padding: 1em 3px 30px 20%;
    float: left;
    width: 80%;
    height: auto;
    vertical-align: middle;
    border-style: none;
    border-radius: 4px;
  }
  /* Classe: .img-where
  
  a)float: left; --> nos permite controlar a posição horizontal de um elemento, que no caso estará alinhado a esquerda.
  b) width: 350px; --> está definindo a largura do elemento, que nesse caso, ocupando 350px do espaço disponível.
  c) height: 300px; --> está definindo a altura do elemento, que nesse caso, será de 300px do para o espaço disponível.
  d)background-color: white; --> define a cor de fundo do elemento.
  */
  .img-where {
    float: left;
    width: 350px;
    height: 350px;
    background-color: white;    
  }
  /* Classe: .localizacao
  
  a) padding: 10px 0 0 15px; --> define uma a distância entre o conteúdo de um elemento e suas bordas, podendo ser usado até 4 valores, na sequência: superior,direita,inferior e esquerda.
  */
  .localizacao{
     padding: 10px 0 0 15px;
  }
  /* Classe: .localizacao-text
  
  a) font-size: 18px; --> está definindo o tamanho da fonte.
  */
  .localizacao-text{
    font-size: 18px;
  }
  /* Classe: .where-text
  
  a) height: 500px; --> está definindo a altura do elemento, que nesse caso, será de 300px do para o espaço disponível.
  b) background-color: white; --> define a cor de fundo do elemento.
  */
  .where-text{
    height: 500px;
    background-color: white;    
  }
  /* Classe: .where-local
  
  a) float: left; --> nos permite controlar a posição horizontal de um elemento, que no caso estará alinhado a esquerda.
  b)width: 600px; --> está definindo a largura do elemento, que nesse caso, ocupando 600px do espaço disponível.
  c)height: 330px; --> está definindo a altura do elemento, que nesse caso, será de 330px do para o espaço disponível.
  d)margin: 15px; -->está definindo a margem, onde que a margem para os 4 lados será de 15px.
  e) background-color: white; --> define a cor de fundo do elemento.
  f)overflow: hidden; --> está definindo que o conteúdo excedente está oculto.
  */
  .where-local {
    float: left;
    width: 600px;
    height: 330px;
    margin: 15px;
    background-color: white;
    overflow: hidden;  
  }
  
  /* Nessas estilizações abaixo, estamos inserindo os ícones das informações presentes na localização, através do seu código. Importante também ressaltar que o before está sendo colocado ali pelo fator do ícone estar inserido ANTES(before em inglês) do texto (caso houvesse)*/
  
  /* Classe: .enviar:before
  
  a) color: #ffffff; --> define a cor do item.
  b)display: inline-block; --> permite definir uma largura e uma altura no elemento, na qual não adiciona uma quebra de linha após o elemento.
  c)font: normal normal normal 16px/1 FontAwesome;--> 
  d)font-size: 24px; --> está definindo o tamanho da fonte, ou melhor, do icon.
  e) text-rendering: auto; --> passa informações para o mecanismo de renderização sobre o que otimizar no momento em que ele renderiza texto. Neste caso ele será automático, mas poderia ser optimizeSpeed.
  f)cursor: pointer; -->  é o elemento que será exibido/selecionado ao momento que o cursor apontar ou descansar.
  g)content:"\f124";--> é o código do ícone usado. 
  */
  .enviar:before{
    color: #ffffff;
    display: inline-block;
    font: normal normal normal 16px/1 FontAwesome;
    font-size: 24px;
    text-rendering: auto;
    cursor: pointer;
    content:"\f124";
  }
  .telefone:before{
    color: #7d7d7d;
    display: inline-block;
    font: normal normal normal 16px/1 FontAwesome;
    font-size: 24px;
    text-rendering: auto;
    cursor: pointer;
    content:"\f095";
  }
  .email:before{
    color: #7d7d7d;
    display: inline-block;
    font: normal normal normal 16px/1 FontAwesome;
    font-size: 24px;
    text-rendering: auto;
    cursor: pointer;
    content:"\f003";
  }
  .bussola:before{
    color: #7d7d7d;
    display: inline-block;
    font: normal normal normal 16px/1 FontAwesome;
    font-size: 24px;
    text-rendering: auto;
    cursor: pointer;
    content:"\f276";
  }
  .iconeCafe:before{
    color: #7d7d7d;
    display: inline-block;
    font: normal normal normal 16px/1 FontAwesome;
    font-size: 18px;
    text-rendering: auto;
    cursor: pointer;
    content:"\f0f4";
  }
  /*||||||||||||||||||||||||||||*/
  /* Classe: .rodape
  
  a) color: #fff; --> define a cor dos elementos neste bloco.
  b)background-color: black; --> define a cor de fundo do elemento
  c)padding-top: 64px; --> define o preenchimento superior (espaço) de um elemento.
  d)padding-bottom: 64px; --> define o preenchimento inferior (espaço) de um elemento.
  e) text-align: center; black; --> está definindo o alinhamento do texto, no caso, centralizado.
  f)display: block; --> está definindo que o conteúdo excedente ficará oculto.
  g)opacity: 0.60; --> define a opacidade de um elemento, que no caso estará em 0.60.
  */
  .rodape{
    color: #fff;
    background-color: #000000;
    padding-top: 64px;
    padding-bottom: 64px;
    text-align: center;
    display: block;
    opacity: 0.60;
  
  }
  
  .toTheTop{
    color: #000;
    background-color: #f1f1f1;
    user-select: none;
    border: none;
    display: inline-block;
    padding: 8px 16px;
    vertical-align: middle;
    overflow: hidden;
    text-decoration: none;
  }
  
  .iconeSeta{
    color: #000;
    display: inline-block;
    font: normal normal normal 14px/1 FontAwesome;
    font-size: inherit;
    text-rendering: auto; 
  }
  
  /* Nessa estilização abaixo, estamos inserindo o ícone da seta para redirecionar ao topo, através do seu código. Importante também ressaltar que o before está sendo colocado ali pelo fator do ícone estar inserido ANTES(before em inglês) do texto */
  .iconeSeta:before {
      content: "\f0a9";
  }
  
  .iconesRedesSociais{
    margin-top: 16px;
    margin-bottom: 16px;
    font-size: 24px;
    
  }
  
    .facebook, .instagram, .snapchat, .pinterest, .twitter, .linkendin{
    color: #787878;
    display: inline-block;
    font: normal normal normal 14px/1 FontAwesome;
    font-size: inherit;
    text-rendering: auto;
    cursor: pointer;
    }
  
  /* Nessas estilizações abaixo, estamos inserindo os ícones de cada rede social, através do seu código. Importante também ressaltar que o before está sendo colocado ali pelo fator do ícone estar inserido ANTES(before em inglês) do texto (caso houvesse)*/
  
  .facebook:before {
  content: "\f230";
  }
  
  .instagram:before {
  content: "\f16d";
  }
  .snapchat:before {
    content: "\f2ab";
  }
  .pinterest:before {
  content: "\f231";
  }
  .twitter:before {
    content: "\f099";
  }
  .linkendin:before {
    content: "\f0e1";
  }
  
  /* Estilização da informação escrita do footer, especificadamente da seção Powered: . . .;
  
  Basicamente, utilizamos um fundo "transparente", com uma linha simbolizando abaixo do link(underline), coloração da escrita baseado no branco. Enquanto o atributo "cursor" especifica o cursor do mouse mostrado quando o usuário passa o navegador (mouse) por cima 
  */
  
  .powered{
  color: white;
  background-color: transparent;
  cursor: pointer;
  text-decoration: underline;
  }
 
  .tagCapa2{
    text-align: center;
    box-sizing: inherit;
    position: absolute;
    right: 0;
    bottom: 0;
    color:white;
    padding: 12px 50px;
  }
  .capa{
    padding: 12px 24px;
    text-align: center;
    position: absolute;
      left: 0;
      bottom: 0;
    
  }
  
  .tagCapa{
    text-align: center;
    box-sizing: inherit;
    right: 0;
    bottom: 0;
    display: inline-block;
    position: left;
    background-color: black;
    color: white;
    padding:5px;
  }
  
.texto{
    background-image: url(https://media.giphy.com/media/JGQe5mxayVF04/giphy.gif);
   
    -webkit-background-clip: text;
   
    -webkit-text-fill-color:rgb(103, 103, 102);
    
}
/*
=============== 
Fonts
===============
*/
@import url("https://fonts.googleapis.com/css?family=Open+Sans|Roboto:400,700&display=swap");

/*
=============== 
Variables
===============
*/

:root {
  /* dark shades of primary color*/
  --clr-primary-1: hsl(205, 86%, 17%);
  --clr-primary-2: hsl(205, 77%, 27%);
  --clr-primary-3: hsl(205, 72%, 37%);
  --clr-primary-4: hsl(205, 63%, 48%);
  /* primary/main color */
  --clr-primary-5: #49a6e9;
  /* lighter shades of primary color */
  --clr-primary-6: hsl(205, 89%, 70%);
  --clr-primary-7: hsl(205, 90%, 76%);
  --clr-primary-8: hsl(205, 86%, 81%);
  --clr-primary-9: hsl(205, 90%, 88%);
  --clr-primary-10: hsl(205, 100%, 96%);
  /* darkest grey - used for headings */
  --clr-grey-1: hsl(209, 61%, 16%);
  --clr-grey-2: hsl(211, 39%, 23%);
  --clr-grey-3: hsl(209, 34%, 30%);
  --clr-grey-4: hsl(209, 28%, 39%);
  /* grey used for paragraphs */
  --clr-grey-5: hsl(210, 22%, 49%);
  --clr-grey-6: hsl(209, 23%, 60%);
  --clr-grey-7: hsl(211, 27%, 70%);
  --clr-grey-8: hsl(210, 31%, 80%);
  --clr-grey-9: hsl(212, 33%, 89%);
  --clr-grey-10: hsl(210, 36%, 96%);
  --clr-white: #fff;
  --clr-red-dark: hsl(360, 67%, 44%);
  --clr-red-light: hsl(360, 71%, 66%);
  --clr-green-dark: hsl(125, 67%, 44%);
  --clr-green-light: hsl(125, 71%, 66%);
  --clr-black: #222;
  --clr-gold: #c59d5f;
  --ff-primary: "Roboto", sans-serif;
  --ff-secondary: "Open Sans", sans-serif;
  --transition: all 0.3s linear;
  --spacing: 0.25rem;
  --radius: 0.5rem;
  --light-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);
  --dark-shadow: 0 5px 15px rgba(0, 0, 0, 0.2);
  --max-width: 1170px;
  --fixed-width: 620px;
}
/*
=============== 
Global Styles
===============
*/

*,
::after,
::before {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}
body {
  font-family: var(--ff-secondary);
  background: var(--clr-grey-10);
  color: var(--clr-grey-1);
  line-height: 1.5;
  font-size: 0.875rem;
}
ul {
  list-style-type: none;
}
a {
  text-decoration: none;
}
img:not(.logo) {
  width: 100%;
}
img {
  display: block;
}

h1,
h2,
h3,
h4 {
  letter-spacing: var(--spacing);
  text-transform: capitalize;
  line-height: 1.25;
  margin-bottom: 0.75rem;
  font-family: var(--ff-primary);
}
h1 {
  font-size: 3rem;
}
h2 {
  font-size: 2rem;
}
h3 {
  font-size: 1.25rem;
}
h4 {
  font-size: 0.875rem;
}
p {
  margin-bottom: 1.25rem;
  color: var(--clr-grey-5);
}
@media screen and (min-width: 800px) {
  h1 {
    font-size: 4rem;
  }
  h2 {
    font-size: 2.5rem;
  }
  h3 {
    font-size: 1.75rem;
  }
  h4 {
    font-size: 1rem;
  }
  body {
    font-size: 1rem;
  }
  h1,
  h2,
  h3,
  h4 {
    line-height: 1;
  }
}
/*  global classes */

.btn {
  text-transform: uppercase;
  background: transparent;
  color: var(--clr-black);
  padding: 0.375rem 0.75rem;
  letter-spacing: var(--spacing);
  display: inline-block;
  transition: var(--transition);
  font-size: 0.875rem;
  border: 2px solid var(--clr-black);
  cursor: pointer;
  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.2);
  border-radius: var(--radius);
}
.btn:hover {
  color: var(--clr-white);
  background: var(--clr-black);
}
/* section */
.section {
  padding: 5rem 0;
}

.section-center {
  width: 90vw;
  margin: 5rem auto;
  max-width: 1170px;
}

main {
  min-height: 100vh;
  display: grid;
  place-items: center;
}
/*
=============== 
Countdown Timer
===============
*/
.gift-img {
  margin-bottom: 2rem;
}
.gift-info h3 {
  text-transform: uppercase;
  color: var(--clr-primary-3);
}
.gift-info p {
  color: var(--clr-grey-6);
}
.date {
  color: var(--clr-grey-5);
  font-size: 0.85rem;
}
@media screen and (min-width: 992px) {
  .section-center {
    display: grid;
    grid-template-columns: 1fr 1fr;
    place-items: center;
    gap: 3rem;
    width: 95vw;
  }
  .gift-img {
    margin-bottom: 0;
  }
}
.gift-info p {
  margin: 2rem 0;
}
.deadline {
  display: flex;
}
.deadline-format {
  background: var(--clr-grey-1);
  color: var(--clr-white);
  margin-right: 1rem;
  width: 5rem;
  height: 5rem;
  display: grid;
  place-items: center;
  text-align: center;
}
.deadline-format span {
  display: block;
  text-transform: uppercase;
  letter-spacing: 2px;
  font-size: 0.85rem;
}
.deadline h4:not(.expired) {
  font-size: 2rem;
  margin-bottom: 0.25rem;
  letter-spacing: var(--spacing);
}
.ver_promo{

    color: #000;
    background-color: transparent;
    padding: 0 37% 0 0;
    border: none;
    display: flex;
    justify-content: center;
    text-align: center;
  
  }
  
  #nome{
    width: 45.5%; height: 35px; margin: 10px 0 0 10px; 
  }
  #email{
    width: 45.5%; height: 35px;
  }
  #msg{
    width: 92.4%; height: 35px; margin: 10px 0 0 10px; padding: 2px
  }
  #enviar{
    margin: 10px 0 0 71%; background-color:#000; color: #fff; padding: 3px;
  }

 /* */
 /*
=============== 
Fonts
===============
*/
@import url("https://fonts.googleapis.com/css?family=Open+Sans|Roboto:400,700&display=swap");

/*
=============== 
Variables
===============
*/



*,
::after,
::before {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}
body {
  font-family: var(--ff-secondary);
  background: var(--clr-grey-10);
  color: var(--clr-grey-1);
  line-height: 1.5;
  font-size: 0.875rem;
}
ul {
  list-style-type: none;
}
a {
  text-decoration: none;
}
img:not(.logo) {
  width: 100%;
}
img {
  display: block;
}

h1,
h2,
h3,
h4 {
  letter-spacing: var(--spacing);
  text-transform: capitalize;
  line-height: 1.25;
  margin-bottom: 0.75rem;
  font-family: var(--ff-primary);
}
h1 {
  font-size: 3rem;
}
h2 {
  font-size: 2rem;
}
h3 {
  font-size: 1.25rem;
}
h4 {
  font-size: 0.875rem;
}
p {
  margin-bottom: 1.25rem;
  color: var(--clr-grey-5);
}
@media screen and (min-width: 800px) {
  h1 {
    font-size: 4rem;
  }
  h2 {
    font-size: 2.5rem;
  }
  h3 {
    font-size: 1.75rem;
  }
  h4 {
    font-size: 1rem;
  }
  body {
    font-size: 1rem;
  }
  h1,
  h2,
  h3,
  h4 {
    line-height: 1;
  }
}
/*  global classes */

.btn {
  text-transform: uppercase;
  background: transparent;
  color: var(--clr-black);
  padding: 0.375rem 0.75rem;
  letter-spacing: var(--spacing);
  display: inline-block;
  transition: var(--transition);
  font-size: 0.875rem;
  border: 2px solid var(--clr-black);
  cursor: pointer;
  box-shadow: 0 1px 3px rgba(255, 0, 238, 0.726);
  border-radius: var(--radius);
}
.btn:hover {
  color: blue;
  background: var(--clr-gold);
}
/* section */
.section {
  padding: 5rem 0;
}

.section-center {
  width: 90vw;
  margin: 0 auto;
  max-width: 1170px;
}
@media screen and (min-width: 992px) {
  .section-center {
    width: 95vw;
  }
}
main {
  min-height: 100vh;
  display: grid;
  place-items: center;
}
/*
=============== 
Questions
===============
*/
.title {
  margin-top: 15vh;
  margin-bottom: 4rem;
}
.title h2 {
  color: var(--clr-gold);
  font-family: "Great Vibes", cursive;
  text-align: center;
}
.section-center {
  max-width: var(--fixed-width);
}
.question {
  background: var(--clr-white);
  border-radius: var(--radius);
  box-shadow: var(--light-shadow);
  padding: 1.5rem 1.5rem 0 1.5rem;
  margin-bottom: 2rem;
}
.question-title {
  display: flex;
  justify-content: space-between;
  align-items: center;
  text-transform: capitalize;
  padding-bottom: 1rem;
}

.question-title p {
  margin-bottom: 0;
  letter-spacing: var(--spacing);
  color: var(--clr-grey-1);
}
.question-btn {
  font-size: 2.5rem;
  background: transparent;
  border-color: transparent;
  cursor: pointer;
  color: goldenrod;
  transition: var(--transition);
}
.question-btn:hover {
  transform: rotate(90deg);
}
.question-text {
  padding: 2rem 0 2.5rem 0;
  border-top: 1px solid rgba(230, 0, 0, 0.495);
}
.question-text p {
  margin-bottom: 0;
}
/* hide text */
.question-text {
  display: none;
}
.show-text .question-text {
  display: block;
}
.minus-icon {
  display: none;
}
.show-text .minus-icon {
  display: inline;
}
.show-text .plus-icon {
  display: none;
}